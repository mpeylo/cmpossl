=pod

=head1 NAME

OSSL_CMP_MSG_get0_header,
OSSL_CMP_HDR_get0_transactionID,
OSSL_CMP_HDR_get0_recipNonce,
OSSL_CMP_build_cert_chain,
OSSL_CMP_MSG_check_received
- functions manipulating CMP messages

=head1 SYNOPSIS

  #include <openssl/cmp.h>

  OSSL_CMP_PKIHEADER *OSSL_CMP_MSG_get0_header(const OSSL_CMP_MSG *msg);
  ASN1_OCTET_STRING *OSSL_CMP_HDR_get0_transactionID(const
                                                     OSSL_CMP_PKIHEADER *hdr);
  ASN1_OCTET_STRING *OSSL_CMP_HDR_get0_recipNonce(const
                                                  OSSL_CMP_PKIHEADER *hdr);
  STACK_OF(X509) *OSSL_CMP_build_cert_chain(X509_STORE *store,
                                            X509 *cert);
  typedef int (*allow_unprotected_cb_t) (const OSSL_CMP_CTX *ctx,
                                         const OSSL_CMP_MSG *msg,
                                         int invalid_protection, int arg);
  int OSSL_CMP_MSG_check_received(OSSL_CMP_CTX *ctx, const OSSL_CMP_MSG *msg,
                                  allow_unprotected_cb_t cb, int cb_arg);

=head1 DESCRIPTION

OSSL_CMP_MSG_get0_header returns the header of the given CMP message.

OSSL_CMP_HDR_get0_transactionID returns the transaction ID of the given
PKIHeader.

OSSL_CMP_HDR_get0_recipNonce returns the recipient nonce of the given PKIHeader.

ASN1_OCTET_STRING *OSSL_CMP_MSG_get_transactionID(const OSSL_CMP_MSG *msg)

OSSL_CMP_build_cert_chain() builds up the certificate chain of cert as high up
as possible using the given X509_STORE containing all possible intermediate
certificates and optionally the (possible) trust anchor(s).

OSSL_CMP_MSG_check_received() checks for the given message received (i.e.,
response by server or request from client) whether it has a valid body type,
its protection is accepted,
its transaction ID matches the one of the previous message (if any), and
its recipNonce matches the senderNonce of the previous message (if any).
The message protection is accepted if it is present and can be validated,
but also if it is absent or invalid and the callback function B<cb> is not NULL
and yields non-zero result using B<ctx>, B<msg>, a flag whether the message
protection is present but invalid, and the supplied argument B<cb_arg>.
If so, learns from the message received the senderNonce and the transaction ID
if not yet present in the ctx.  It returns the body type (which is >= 0) of the
message on success, -1 on error.

=head1 NOTES

CMP is defined in RFC 4210 (and CRMF in RFC 4211).

The implementation of CMP for OpenSSL is still work in progress. The API
might change every release!

=head1 RETURN VALUES

See the individual functions above.

=head1 SEE ALSO

L<OSSL_CMP_CTX_new(3)>, L<OSSL_CMP_exec_IR_ses(3)>,
L<OSSL_CMP_certreq_new(3)>, L<OSSL_CMP_MSG_http_perform(3)>

=head1 COPYRIGHT

Copyright 2007-2019 The OpenSSL Project Authors. All Rights Reserved.

Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
L<https://www.openssl.org/source/license.html>.

=cut
