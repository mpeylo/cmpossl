=pod

=head1 NAME

cmp - client for the Certificate Management Protocol (RFC4210)

=head1 SYNOPSIS

B<openssl> B<cmp>
[B<-help>]
[B<-config filename>]
[B<-section name>]

[B<-server address:port>]
[B<-proxy address:port>]
[B<-path remote_path>]
[B<-msgtimeout seconds>]
[B<-maxpolltime seconds>]

[B<-recipient name>]
[B<-expected_sender name>]
[B<-srvcert filename>]
[B<-trusted filenames>]
[B<-untrustedE<nbsp>sources>]
[B<-ignore_keyusage>]
[B<-unprotectederrors>]
[B<-extracertsout filename>]
[B<-cacertsout filename>]

[B<-ref value>]
[B<-secret arg>]
[B<-cert filename>]
[B<-key filename>]
[B<-keypass arg>]
[B<-digest name>]
[B<-extracerts sources>]
[B<-unprotectedrequests>]

[B<-cmd ir|cr|kur|p10cr|rr|genm>]
[B<-infotype name>]
[B<-geninfo OID:int:N>]

[B<-newkey filename>]
[B<-newkeypass arg>]
[B<-subject name>]
[B<-issuer name>]
[B<-days number>]
[B<-reqexts name>]
[B<-san_dns names>]
[B<-san_ip addresses>]
[B<-san_nodefault>]
[B<-san_critical>]
[B<-policies names>]
[B<-policies_critical>]
[B<-popo number>]
[B<-csr filename>]
[B<-implicitconfirm>]
[B<-disableconfirm>]
[B<-out_trusted filenames>]
[B<-verify_hostname cn>]
[B<-verify_ip ip>]
[B<-verify_email email>]
[B<-certout filename>]

[B<-oldcert filename>]
[B<-revreason number>]

[B<-certpass arg>]
[B<-certform DER|PEM|P12>]
[B<-keyform DER|PEM|P12>]
[B<-clrform DER|PEM>]
[B<-storeform DER|PEM|P12>]
[B<-engine id>]

[B<-tls_used>]
[B<-tls_cert filename>]
[B<-tls_key filename>]
[B<-tls_keypass arg>]
[B<-tls_trusted filenames>]
[B<-tls_host name>]

[B<-reqin>]
[B<-reqout>]
[B<-respin>]
[B<-respout>]

[B<-crl_check>]
[B<-crl_check_all>]
[B<-crl_download>]
[B<-crls URLs>]
[B<-ocsp_check_all>]
[B<-ocsp_use_aia>]
[B<-ocsp_url url>]
[B<-ocsp_timeout seconds>]
[B<-ocsp_status>]
[B<-policy arg>]
[B<-purpose purpose>]
[B<-verify_nameE<nbsp>name>]
[B<-verify_depth num>]
[B<-auth_level level>]
[B<-attimeE<nbsp>timestamp>]
[B<-ignore_critical>]
[B<-policy_check>]
[B<-explicit_policy>]
[B<-inhibit_any>]
[B<-inhibit_map>]
[B<-x509_strict>]
[B<-extended_crl>]
[B<-use_deltas>]
[B<-policy_print>]
[B<-check_ss_sig>]
[B<-trusted_first>]
[B<-suiteB_128_only>]
[B<-suiteB_128>]
[B<-suiteB_192>]
[B<-partial_chain>]
[B<-no_alt_chains>]
[B<-no_check_time>]
[B<-allow_proxy_certs>]

=head1 DESCRIPTION

The B<cmp> command is a client implementation for the Certificate
Management Protocol (CMP) as defined in RFC4210. It can be used to
request certificates from a CA server, update their certificates,
request certificates to be revoked, and perform other CMP requests.

=head1 OPTIONS

=over 4

=item B<-help>

Display a summary of all options

=item B<-config filename>

Configuration file to use. An empty string "" means none.
Default file name is taken from the environment variable 'OPENSSL_CONF'.

=item B<-section name>

Section to use within config file defining CMP options,
An empty string "" means no specific section. Default is 'cmp'.
In any case, as usual, the [default] section and finally the unnamed section
(as far as present) can provide per-option fallback values.

=back


=head2 Message transfer options

=over 4

=item B<-server address[:port]>

The IP address or hostname and port (defaults to 8080) of the CMP server to connect to using HTTP/S transport.

=item B<-proxy address[:port]>

The IP address or hostname and port (defaults to 8080) of the HTTP/S proxy
server, optionally given if needed for accessing the CMP server.

=item B<-path remote_path>

HTTP path location to use for the CMP server (aka CMP alias). Defaults to "/".

=item B<-msgtimeout seconds>

Number of seconds (or 0 for infinite) a CMP message round trip is
allowed to take before a timeout error is returned. Default is 120.

=item B<-maxpolltime seconds>

Maximum total number seconds to attempt polling for
certificates on 'waiting' PKIStatus. Default is 0 (infinite).

=back


=head2 Server authentication options

=over 4

=item B<-recipient name>

Distinguished Name (DN) of the CMP message recipient,
i.e., the CMP server (usually a CA or RA entity).

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

If a CMP server certificate is given with the B<-srvcert> option, its subject
name is taken as the recipient name and the B<-recipient> option is ignored.
If neither of the two are given, the recipient of the PKI message is
determined in the following order: from the B<-issuer> option if present,
the issuer of old cert given with the B<-oldcert> option if present,
the issuer of the client certificate (B<-cert> option) if present.

Setting the recipient field in the CMP header is mandatory.
If none of the above options allowing to derive the recipient name is given,
no suitable value for the recipient in the PKIHeader is available.
As last resort it is set to NULL-DN.

When a response is received, its sender must match the recipient of the request.

=item B<-expected_sender name>

Distinguished Name (DN) of the expected sender in CMP response messages,
i.e., the CMP server (usually a CA or RA entity).

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

If not given, the recipient name determined as specified above will be used.

=item B<-srvcert filename>

The specific CMP server certificate to use and trust directly
for verifying the protection of response messages.
May be set alternatively to the B<-trusted> option
if the certificate is available and should be directly trusted.

If set, the issuer of the certificate is also used as the recipient of the CMP
request and as the expected sender of the CMP response,
overriding any potential B<-recipient> option.

=item B<-trusted filenames>

Trusted CA certificate(s) to use for CMP server authentication
when verifying responses, unless the B<-srvcert> option is given.

Multiple file names may be given, separated by commas or whitespace.
Each source may contain multiple certificates.

=item B<-untrusted sources>

Non-trusted intermediate certificate(s) that may be useful for constructing
certificate chains for
the CMP server (when verifying signature-based message protection),
the TLS server (when establishing TLS connections),
and/or the newly enrolled certificate (when verifying a certificate response).

Multiple file names may be given, separated by commas and/or whitespace.
Each file may contain multiple certificates.

=item B<-ignore_keyusage>]

Ignore key usage restrictions in certificates at CMP level,
else 'digitalSignature' must be allowed for signature use.

=item B<-unprotectederrors>

Accept unprotected messages by the server even if they should have been
protected.  This applies to the following message types received from the
server:

=over 4

=item * error messages

=item * negative certificate responses (IP/CP/KUP) and revocation responses (RP)

=item * PKIConf

=back

B<WARNING:> This setting leads to unspecified behavior and it is meant
exclusively to allow interoperability with server implementations violating
RFC 4210, e.g.:

=over 4

=item * section 5.1.3.1 allows exceptions from protecting only for special
cases:
"There MAY be cases in which the PKIProtection BIT STRING is deliberately not
used to protect a message [...] because other protection, external to PKIX, will
be applied instead."

=item * section 5.3.21 is clear on ErrMsgContent: "The CA MUST always sign it
with a signature key."

=item * appendix D.4 shows PKIConf having protection

=back

=item B<-extracertsout filename>

The file where to save any extra certificates received in a response message.

=item B<-cacertsout filename>

The file where to save any received CA certificates.

=back


=head2 Client authentication options

=over 4

=item B<-ref value>

Reference value to use when messages are authenticated with pre-shared keys
(password-based MAC).  Implies that the B<-secret> option is also given.

=item B<-secret arg>

Source for secret value to use when messages are authenticated with
pre-shared keys (password-based MAC).
Implies that the B<-ref> option is also given.

For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-cert filename>

The client's currently existing certificate. This will be used for signing
request messages using an certificate.  Requires for the corresponding key to
be given with B<-key>.  For IR this can be used for authenticating a request
message using an external entity certificate as defined in appendix E.7 of RFC
4210. For KUR this is also used as certificate to be updated if the B<-oldcert>
option is not given.
If the file includes further certs, they are appended in the extraCerts field.

=item B<-key filename>

The corresponding private key file for the client's current certificate given in
the B<-cert> option.

=item B<-keypass arg>

Pass phrase source for the private key given with the B<-key> option.
If not given here, the password will be prompted for if needed.

For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-digest name>

Specifies name of supported digest to use in RFC 4210's MSG_SIG_ALG.
If applicable, this is used for message protection and
Proof-of-Possession (POPO) signatures.
To see the list of supported digests, use the command
I<list --digest-commands>.  Defaults to 'sha256'.

=item B<-extracerts sources>

Certificates to append in the extraCerts field in sent messages.

Multiple file names or URLs may be given, separated by commas or whitespace.
Each source may contain multiple certificates.

=item B<-unprotectedrequests>

Send messages without CMP-level protection.

=back


=head2 Generic message options

=over 4

=item B<-cmd ir|cr|kur|p10cr|rr|genm>

CMP command to execute. Currently implemented commands are:
    ir   - Initialization Request
    cr   - Certificate Request
    kur  - Key Update Request
    p10cr - PKCS#10 Certification Request
    rr   - Revocation Request
    genm - General Message

B<ir> requests initialization of an End Entity into a PKI hierarchy by means of
issuance of a first certificate.

B<cr> requests issuance of an additional certificate for an End Entity already
initialized to the PKI hierarchy.

B<p10cr> requests issuance of an additional certificate similarly to B<cr>
but uses PKCS#10 CSR format.

B<kur> requests (key) update for an existing, given certificate.

B<rr> requests revocation of an existing, given certificate.

B<genm> requests information using a General Message, where optionally
included B<InfoTypeAndValue>s may be used to state which info is of interest.
Upon receipt of the General Response, information about all received
ITAV B<infoType>s is printed to stdout.

=item B<-infotype name>

Set InfoType name to use for requesting specific info in genm,
e.g., 'signKeyPairTypes'.

=item B<-geninfo OID:int:N>

Set generalInfo in request PKIHeader with type OID and integer value N,
e.g., '1.2.3:int:987'.

=back


=head2 Certificate request options

=over 4

=item B<-newkey filename>

The file containing the private key corresponding to the requested certificate
in IR, CR or KUR.  Default is the current client key if given.

=item B<-newkeypass arg>

Pass phrase source for the key given with the B<-newkey> option.
If not given here, the password will be prompted for if needed.

For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-subject name>

X509 Distinguished Name (DN) of subject to use in the requested certificate
template. For KUR, it defaults to the subject DN of the reference certificate
(see -oldcert). This default is used for IR and CR only if no SANs are set.

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

In case B<-cert> is not set, i.e. when using MSG_MAC_ALG, the subject DN is also
used as sender of the PKI message.

=item B<-issuer name>

X509 issuer Distinguished Name (DN) of the CA server
to be put in the requested certificate template in IR/CR/KUR.

The argument must be formatted as I</type0=value0/type1=value1/type2=...>,
characters may be escaped by \E<nbsp>(backslash), no spaces are skipped.

If neither B<-srvcert> nor B<-recipient> is available,
the name given in this option is also set as the recipient of the CMP message.

=item B<-days number>

Number of days the new certificate is asked to be valid for.

=item B<-reqexts name>

Name of section in OpenSSL config file defining certificate request extensions.

=item B<-san_dns names>

One or more DNS name(s), separated by commas or whitespace,
to add as Subject Alternative Name certificate request extension.
Cannot be used if any Subject Alternative Name extension is set via -reqexts.
By default, unless B<-san_nodefault> is set, the Subject Alternative Names
are copied from the reference certificate (see -oldcert).

=item B<-san_ip addresses>

One or more IP address(es), separated by commas or whitespace,
to add as Subject Alternative Name certificate request extension.
Cannot be used if any Subject Alternative Name extension is set via -reqexts.
By default, unless B<-san_nodefault> is set, the Subject Alternative Names
are copied from the reference certificate (see -oldcert).

=item B<-san_nodefault>

Do not take default Subject Alternative Names from the reference certificate.

=item B<-san_critical>

Flag the Subject Alternative Names given with B<-san_dns> or B<-san_ip>
as critical.

=item B<-policies names>

One or more OID(s), separated by commas or whitespace,
to add as certificate policies request extension.

=item B<-policies_critical>

Flag the policies given with B<-policies> as critical.

=item B<-popo number>

Set Proof-of-Possession (POPO) method; values: 0..3.
0 = NONE, 1 = SIGNATURE (default), 2 = ENCRCERT, 3 = RAVERIFIED

=item B<-csr filename>

CSR in PKCS#10 format to use in p10cr. This is for supporting legacy clients.

=item B<-implicitconfirm>

Request implicit confirmation of the newly enrolled certificate.

=item B<-disableconfirm>

Do not send certificate confirmation message for newly enrolled certificate to
cope with broken servers not supporting implicit confirmation correctly.

=item B<-out_trusted filenames>

Trusted certificate(s) to use for verifying the newly enrolled certificate.

Multiple file names may be given, separated by commas or whitespace.
Each source may contain multiple certificates.

=item B<-verify_hostname name>

When verification of the newly enrolled certificate is enabled (with the
B<-out_trusted> option), check if any DNS Subject Alternative Name (or if no
DNS SAN is included, the Common Name in the subject) equals the given B<name>.

B<-verify_ip ip>

When verification of the newly enrolled certificate is enabled (with the
B<-out_trusted> option), check if there is
an IP address Subject Alternative Name matching the given IP address.

B<-verify_email email>

When verification of the newly enrolled certificate is enabled (with the
B<-out_trusted> option), check if there is
an email address Subject Alternative Name matching the given email address.

=item B<-certout filename>

The file where the newly enrolled certificate should be saved.

=back


=head2 Certificate revocation options

=over 4

=item B<-oldcert filename>

The certificate to be updated (i.e., renewed or re-keyed) in KUR
or to be revoked in RR. It must be given for RR, else it defaults to B<-cert>.

The reference certificate determined in this way, if any, is also used for
deriving default subject DN and Subject Alternative Names for IR, CR, and KUR.
Its isser, if any, is used as default recipient in the CMP message header
if neither B<-srvcert>, B<-recipient>, nor B<-issuer> is available.

=item B<-revreason number>

Set CRLReason to be included in revocation request (RR); values: 0..10
or -1 for none (which is the default).

Reason numbers defined in RFC 5280 are:
   CRLReason ::= ENUMERATED {
        unspecified             (0),
        keyCompromise           (1),
        cACompromise            (2),
        affiliationChanged      (3),
        superseded              (4),
        cessationOfOperation    (5),
        certificateHold         (6),
             -- value 7 is not used
        removeFromCRL           (8),
        privilegeWithdrawn      (9),
        aACompromise           (10) }

=back


=head2 Credential format options

=over 4

=item B<-certpass arg>

Pass phrase source for any certificate stores given with the B<-trusted>,
B<-untrusted>, B<-out_trusted>, B<-extracerts>, or B<-tls_trusted> options.
If not given here, the password will be prompted for if needed.

For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-certform DER|PEM|P12>

Format to try first when reading and to use for writing certificate files.
Default value is PEM.

=item B<-keyform DER|PEM|P12>

Format to try first when reading key files. Default value is PEM.

=item B<-crlform DER|PEM>

Format to try first when reading CRL files. Default value is PEM.

=item B<-storeform DER|PEM|P12>

Format to try first when reading and to use for writing certificate store files.
Default value is PEM.

=item B<-engine id>

Specifying an crypot engine B<id> will cause L<cmp(1)> to obtain a functional
reference to the specified engine, thus initializing it if needed. The engine
will be used for all algorithms supported for keys prefixed by 'engine:'.
Engines may be defined in the OpenSSL config file as usual in an engine section.

Options specifying keys, like B<-key>, B<-newkey>, B<-tls_key> can prefix
'engine:' to engine-specific identifiers for security tokens objects held by
the engine. The following example utilizes the RFC 7512 PKCS #11 URI scheme as
supported e.g. by libp11:
'-key engine:pkcs11:object=my-private-key;type=private;pin-value=1234'

=back


=head2 TLS options

=over 4

=item B<-tls_used>

Force using TLS (even when other TLS_related options are not set)
when connecting to CMP server.

=item B<-tls_cert filename>

Client's TLS certificate. If the file includes further certificates,
they are provided to the server as the client certificate chain.

=item B<-tls_key filename>

Private key for the client's TLS certificate.

=item B<-tls_keypass arg>

Pass phrase source for client's private TLS key.
If not given here, the password will be prompted for if needed.

For more information about the format of B<arg> see the
B<PASS PHRASE ARGUMENTS> section in L<openssl(1)>.

=item B<-tls_trusted filenames>

Trusted certificate(s) to use for verifying the TLS server certificate.
This implies host name validation.

Multiple file names may be given, separated by commas or whitespace.
Each source may contain multiple certificates.

=item B<-tls_host name>

Address to be checked (rather than B<-server> address) during host name
validation. This may be a Common Name, a DNS name, or an IP address.

=back


=head2 Testing and debugging options

=over 4

=item B<-reqin>

Take sequence of CMP requests from file(s).
Multiple file names may be given, separated by commas and/or whitespace.
As many files are read as needed for a complete transaction.

=item B<-reqout>

Save sequence of CMP requests to file(s).
Multiple file names may be given, separated by commas and/or whitespace.
As many files are written as needed to store the complete transaction.

=item B<-respin>

Process sequence of CMP responses provided in file(s), skipping server.
Multiple file names may be given, separated by commas and/or whitespace.
As many files are read as needed for the complete transaction.

=item B<-respout>]

Save sequence of CMP responses to file(s).
Multiple file names may be given, separated by commas and/or whitespace.
As many files are written as needed to store the complete transaction.

=back


=head2 Certificate verification options, for both CMP and TLS

=over 4

=item B<-crl_check>

The B<-crl_check>, B<-crl_download>, and B<-crls> options enable mandatory
certificate status checking for at least the leaf certificate
using CRLs unless OCSP is enabled and succeeds.

=item B<-crl_check_all>

Extend revocation status checking (using CRLs) to full certificate chain.

=item B<-crl_download>

Retrieve CRLs from distribution points given in certificates,
as primary source.

This option enables CRL checking for, e.g., the CMP/TLS server certificate
as it is the leaf certificate of the certificate chain.
Compare B<X509_V_FLAG_CRL_CHECK>.

=item B<-crls URLs>

Use given CRL(s) as secondary source of certifiate revocation information. The
URLs argument may be a single element or a comma- or whitespace-separated list,
each element starting with 'http:' or 'file:' or being simply a local file name.

This option enables CRL checking for, e.g., the CMP/TLS server certificate
as it is the leaf certificate of the certificate chain.
Compare B<X509_V_FLAG_CRL_CHECK>.

=item B<-ocsp_check_all>

Require revocation status checking (via OCSP) for full certificate chain.
On OCSP response error try revocation status checking using CRLs if enabled.
This option has little sense without -ocsp_use_aia or -ocsp_url.

=item B<-ocsp_use_aia>

Use OCSP with any AIA entries in certificates as primary URL of OCSP responder.
On OCSP response error try revocation status checking using CRLs if enabled.

=item B<-ocsp_url url>

Use OCSP with given URL as secondary (fallback) address of OCSP responder.
On OCSP response error try revocation status checking using CRLs if enabled.

=item B<-ocsp_timeout seconds>

Timeout for retrieving responses from OCSP responders (or 0 for none).
Default is 10 seconds.

=item B<-ocsp_status>

Enable certificate status for TLS server certificate via OCSP stapling.
Multi-stapling is not (yet) supported. Not available before OpenSSL 1.1.

=item
B<-policy>, B<-purpose>, B<-verify_name>, B<-verify_depth>, B<-auth_level>,
B<-attime>, B<-ignore_critical>, B<-policy_check>,
B<-explicit_policy>, B<-inhibit_any>, B<-inhibit_map>, B<-x509_strict>,
B<-extended_crl>, B<-use_deltas>, B<-policy_print>, B<-check_ss_sig>,
B<-trusted_first>, B<-suiteB_128_only>, B<-suiteB_128>, B<-suiteB_192>,
B<-partial_chain>, B<-no_alt_chains>, B<-no_check_time>, B<-allow_proxy_certs>

Set various certificate chain validation options.
See the L<verify(1)> manual page for details.

=back


=head1 EXAMPLES

Note: in these examples the '\' at line ends means
the invocation should be all on one line.

Requesting "all relevant information" with an empty General Message.
This prints information about all received ITAV B<infoType>s to stdout.

  openssl cmp -cmd genm -server 127.0.0.1:8080 -path pkix/ \
    -ref 1234 -secret pass:1234-5678-1234-5678 \
    -recipient "/CN=CMPserver"

Sending an initial request message to a CMP server running on the local
host, using a pre-shared secret key for authentication. In this example
the client does not have the CA certificate yet, so we specify the CA's
name with B<-recipient> and save any CA certificates that we may receive
in the ./capubs.pem file.

  openssl genrsa -out cl_key.pem
  openssl cmp -cmd ir -server 127.0.0.1:8080 -path pkix/ \
    -ref 1234 -secret pass:1234-5678-1234-5678 \
    -recipient "/CN=CMPserver" \
    -newkey cl_key.pem -subject "/CN=MyName" \
    -cacertsout capubs.pem -certout cl_cert.pem

Then, when the keys for this certificate need to be updated, the client
can send a key update request.

  openssl genrsa -out cl_key_new.pem
  openssl cmp -cmd kur -server 127.0.0.1:8080 -path pkix/ \
    -cert cl_cert.pem -key cl_key.pem \
    -recipient "/CN=CMPserver" \
    -trusted capubs.pem \
    -newkey cl_key_new.pem -certout cl_cert_new.pem

=head1 SEE ALSO

L<genrsa(1)|genrsa(1)>, L<gendsa(1)|gendsa(1)>, L<x509v3_config(5)|x509(1)>

=cut
